1. If you are collecting user data, how do you inform your customers why you’re processing their data? Do you have mechanisms in place for users to deny the consent of data processing? 

In our web app, we are collecting user data when the user creates an account and stores their profile information. We plan to inform our customers of their data that is processed by writing a User Terms and Conditions document for users to read. Once they have read the agreement, they will select a button to state that they accept our terms and understand how our product will process their data. This will comply with the GDPR checklist. If a user denies the consent of data processing, then the user will not be able to use our web app as data processing is necessary in order to utilize the web app to find internships based on the user’s experiences. We will ensure our Terms and Conditions are clear and explain all major points. 

2. If you are not directly processing user data, what data are you processing and why? Are your data processing techniques made clear to your users? How? 

We are also processing internship data from the internet through web scraping. This is used to present to the user the available internships that they can apply to and constitutes the main functionality of our program. We are scrapping the websites of currently one internship site, LinkedIn, and will be adding more such as Indeed and more (with proper research on the accuracy and safety of these sites). We make clear the data processing techniques in our Terms and Conditions document. On our web app, we have a page with a work-in-progress title "How does it work" where we plan to give the user information about our algorithm and the data. This will allow users to view where the internship data they are presented with is coming from, how it is presented, and clarify the data is safe, reputable, and real. 

3. What data processing do you do, and how would you ensure that it is done safely if you don’t already? How would you secure your project against possible malfunctions/crashes? 

From the user end on data processing, we are storing all of the user data on Firebase, a reputable and safe platform for users to store their user data. Authentication is performed through Firebase/GCP and every user gets a unique user ID (20 characters) that is used to reference all their information. All information associated with a user is hashed if possible and secured using a 40-character hash. All user-related information is stored in Firebase - which is super secure - but if there is a leak then there is no way for anyone to get access to all users’ information at any given time - since, in order to access any information about any user, the person accessing the database must have access to the 20-character unique user ID to get access to any information at all. 

For the internship data, we ensure our data is safe using reputable internship/job websites. For example, we are first using LinkedIn which we have found is safe. LinkedIn has stated "Posting jobs without explicit permission or knowledge of another party is against our Terms of Service." This was in response to a premium user who posted a fake job position. This issue from 2019 has since been resolved and job posting safety continues to be a priority for LinkedIn to ensure all their users are seeing real job postings. (Sources: https://mashable.com/article/linkedin-jobs-security-flaw/ and https://blog.linkedin.com/2019/august/27/staying-safe-on-linkedin-during-your-job-search#:~:text=It's%20against%20our%20Terms%20of,are%20blocked%20from%20the%20site) For other sites, such as indeed.com, the Terms of Service are different, therefore, we plan to again research these sites to ensure all the data is safe for the users. 

4. Let’s say that your database is compromised - what is the worst-case scenario for your app? Your users? How do you protect against a breach? What steps have you taken to ensure that the data you’re storing in your database is protected? This could include protecting your inputs to avoid injection attacks, encrypting user data to avoid password leaks, etc.

If our database is compromised, the worst-case scenario for our app and users is our database with internship data, and user data is messed with or stolen. For user data, the data stored for each user is their name, university, graduating year, GPA, and internship experiences. This also goes for our internship data that is pulled from websites after web scraping. To protect against a breach, we are using Firebase for data storage. As previously mentioned, Firebase is very secure but if there is a leak then there is no way for anyone to get access to all users’ information at any given time - since, in order to access any information about any user, the person accessing the database must have access to the 20-character unique user ID to get access to any information at all. 

