{"ast":null,"code":"var _jsxFileName = \"/Users/rajivdulepet/Desktop/cs0320/term-project-asrira11-kpadh-mkurup1-rdulepet/frontend/src/screens/src/SignUpScreen.js\";\nimport React, { Component } from \"react\";\nimport \"../styles/SignUpScreen.css\";\nimport firebase from \"../../firebase\";\nimport TextBox from \"../../components/src/TextBox\";\nimport CustomButton from \"../../components/src/CustomButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUpScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkEmailValidity = () => {\n      if (this.state.email.match(\"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\\"(?:\" + '[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9]' + \"(?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|\" + \"[1-9]?[0-9]))\\\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\" + \"\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])\")) {\n        this.setState({\n          emailValidityMessage: \"Your email looks valid!\"\n        });\n        this.setState({\n          emailValidityBoolean: true\n        });\n        this.setState({\n          passwordMatchMessage: \"\"\n        });\n        this.setState({\n          passwordValidityMessage: \"\"\n        });\n        this.setState({\n          errorMessage: \"\"\n        });\n        return true;\n      } else {\n        this.setState({\n          emailValidityMessage: \"Oops! Your email looks like it is invalid!\"\n        });\n        this.setState({\n          emailValidityBoolean: false\n        });\n        this.setState({\n          passwordMatchMessage: \"\"\n        });\n        this.setState({\n          passwordValidityMessage: \"\"\n        });\n        this.setState({\n          errorMessage: \"\"\n        });\n        return false;\n      }\n    };\n\n    this.changeEmail = newEmail => {\n      this.checkEmailValidity();\n      this.setState({\n        email: newEmail\n      });\n    };\n\n    this.checkPasswordValidity = () => {\n      if (!!this.state.passwordOne.match(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%* #+=()^?&])[A-Za-z\\d$@$!%* #+=()^?&]{3,}$/)) {\n        this.setState({\n          passwordValidityBoolean: true\n        });\n        this.setState({\n          passwordValidityMessage: \"Your password looks secure!\"\n        });\n        this.setState({\n          passwordMatchMessage: \"\"\n        });\n        this.setState({\n          emailValidityMessage: \"\"\n        });\n        this.setState({\n          errorMessage: \"\"\n        });\n        return true;\n      } else {\n        this.setState({\n          passwordValidityBoolean: false\n        });\n        this.setState({\n          passwordValidityMessage: \"Oops! Password must contain at least one uppercase, one lowercase, one special character & one number!\"\n        });\n        this.setState({\n          passwordMatchMessage: \"\"\n        });\n        this.setState({\n          emailValidityMessage: \"\"\n        });\n        this.setState({\n          errorMessage: \"\"\n        });\n        return false;\n      }\n    };\n\n    this.changePasswordOne = newPassword => {\n      this.checkPasswordValidity();\n      this.setState({\n        passwordOne: newPassword\n      }, () => {\n        this.checkPasswordValidity();\n      });\n    };\n\n    this.checkPasswordMatch = () => {\n      if (this.state.passwordOne === this.state.passwordTwo) {\n        if (this.checkPasswordValidity()) {\n          this.setState({\n            passwordMatchBoolean: true\n          });\n          this.setState({\n            passwordMatchMessage: \"Passwords match!\"\n          });\n          this.setState({\n            passwordValidityMessage: \"\"\n          });\n          this.setState({\n            emailValidityMessage: \"\"\n          });\n          this.setState({\n            errorMessage: \"\"\n          });\n          return true;\n        } else {\n          this.setState({\n            passwordValidityBoolean: false\n          });\n          this.setState({\n            passwordValidityMessage: \"Oops! Password must contain at least one uppercase, one lowercase, one special character & one number!\"\n          });\n          this.setState({\n            passwordMatchMessage: \"\"\n          });\n          this.setState({\n            emailValidityMessage: \"\"\n          });\n          this.setState({\n            errorMessage: \"\"\n          });\n          return false;\n        }\n      } else {\n        this.setState({\n          passwordMatchBoolean: false\n        });\n        this.setState({\n          passwordMatchMessage: \"Oops! Passwords don't match!\"\n        });\n        this.setState({\n          passwordValidityMessage: \"\"\n        });\n        this.setState({\n          emailValidityMessage: \"\"\n        });\n        this.setState({\n          errorMessage: \"\"\n        });\n        return false;\n      }\n    };\n\n    this.changePasswordTwo = newPassword => {\n      this.checkPasswordMatch();\n      this.setState({\n        passwordTwo: newPassword\n      }, () => {\n        this.checkPasswordMatch();\n      });\n    };\n\n    this.writeToDatabase = () => {\n      firebase.firestore().collection(\"existing-users\").doc(this.state.email).set({\n        created_at: Date.now()\n      }).then(() => {\n        firebase.firestore().collection(\"user-data\").doc(this.state.uid).set({\n          email: this.state.email,\n          initial_profile_setup_complete: false\n        }).then(() => {\n          if (this.state.errorMessage === \"\") {\n            window.location.href = \"/profile1\";\n          }\n        }).catch(error => {\n          this.setState({\n            errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n          });\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n        });\n      });\n    };\n\n    this.createUser = () => {\n      const email = this.state.email;\n      const password = this.state.passwordTwo;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(userCredential => {\n        const user = userCredential.user;\n        this.setState({\n          uid: user.uid\n        }, () => {\n          this.writeToDatabase();\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n        });\n      });\n    };\n\n    this.checkUserExists = () => {\n      firebase.firestore().collection(\"existing-users\").doc(this.state.email).get().then(doc => {\n        if (doc.exists) {\n          this.setState({\n            passwordMatchMessage: \"\"\n          });\n          this.setState({\n            passwordValidityMessage: \"\"\n          });\n          this.setState({\n            emailValidityMessage: \"\"\n          });\n          this.setState({\n            errorMessage: \"Oops! It looks like this email address is already in use.\"\n          });\n          this.setState({\n            errorMessageBoolean: true\n          });\n        } else {\n          this.createUser();\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n        });\n      });\n    };\n\n    this.signUpClick = () => {\n      if (this.state.email === \"\" || this.state.passwordOne === \"\" || this.state.passwordTwo === \"\") {\n        this.setState({\n          errorMessageBoolean: true\n        });\n        this.setState({\n          passwordMatchMessage: \"\"\n        });\n        this.setState({\n          passwordValidityMessage: \"\"\n        });\n        this.setState({\n          emailValidityMessage: \"\"\n        });\n        this.setState({\n          errorMessage: \"Oops! Please make sure all fields are filled.\"\n        });\n      } else if (this.checkEmailValidity() && this.checkPasswordValidity() && this.checkPasswordMatch()) {\n        this.checkUserExists();\n      } else {\n        this.setState({\n          errorMessageBoolean: true\n        });\n        this.setState({\n          passwordMatchMessage: \"\"\n        });\n        this.setState({\n          passwordValidityMessage: \"\"\n        });\n        this.setState({\n          emailValidityMessage: \"\"\n        });\n        this.setState({\n          errorMessage: \"Oops! Please make sure all fields are filled in correctly.\"\n        });\n      }\n    };\n\n    this.goBack = () => {\n      window.location.href = \"/landing\";\n    };\n\n    this.state = {\n      email: \"\",\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      emailValidityMessage: \"\",\n      emailValidityBoolean: true,\n      passwordValidityMessage: \"\",\n      passwordValidityBoolean: true,\n      passwordMatchMessage: \"\",\n      passwordMatchBoolean: true,\n      errorMessage: \"\",\n      errorMessageBoolean: false,\n      uid: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back-button\",\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          value: \"Go Back\",\n          onClick: this.goBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: \"Sign Up Below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        label: \"Email\",\n        type: \"text\",\n        value: this.state.email,\n        change: this.changeEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        label: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        change: this.changePasswordOne\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        value: this.state.password,\n        change: this.changePasswordTwo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.state.emailValidityBoolean ? {\n          color: \"green\"\n        } : {\n          color: \"red\"\n        },\n        className: \"error-messages\",\n        children: this.state.emailValidityMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.state.passwordValidityBoolean ? {\n          color: \"green\"\n        } : {\n          color: \"red\"\n        },\n        className: \"error-messages\",\n        children: this.state.passwordValidityMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.state.passwordMatchBoolean ? {\n          color: \"green\"\n        } : {\n          color: \"red\"\n        },\n        className: \"error-messages\",\n        children: this.state.passwordMatchMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.state.errorMessageBoolean ? {\n          color: \"red\"\n        } : {\n          color: \"green\"\n        },\n        className: \"error-messages\",\n        children: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        value: \"Sign Up\",\n        onClick: this.signUpClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignUpScreen;","map":{"version":3,"sources":["/Users/rajivdulepet/Desktop/cs0320/term-project-asrira11-kpadh-mkurup1-rdulepet/frontend/src/screens/src/SignUpScreen.js"],"names":["React","Component","firebase","TextBox","CustomButton","SignUpScreen","constructor","props","checkEmailValidity","state","email","match","setState","emailValidityMessage","emailValidityBoolean","passwordMatchMessage","passwordValidityMessage","errorMessage","changeEmail","newEmail","checkPasswordValidity","passwordOne","passwordValidityBoolean","changePasswordOne","newPassword","checkPasswordMatch","passwordTwo","passwordMatchBoolean","changePasswordTwo","writeToDatabase","firestore","collection","doc","set","created_at","Date","now","then","uid","initial_profile_setup_complete","window","location","href","catch","error","createUser","password","auth","createUserWithEmailAndPassword","userCredential","user","checkUserExists","get","exists","errorMessageBoolean","signUpClick","goBack","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/SignUpScreen.css\";\nimport firebase from \"../../firebase\";\nimport TextBox from \"../../components/src/TextBox\";\nimport CustomButton from \"../../components/src/CustomButton\";\n\nclass SignUpScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      emailValidityMessage: \"\",\n      emailValidityBoolean: true,\n      passwordValidityMessage: \"\",\n      passwordValidityBoolean: true,\n      passwordMatchMessage: \"\",\n      passwordMatchBoolean: true,\n      errorMessage: \"\",\n      errorMessageBoolean: false,\n      uid: \"\",\n    };\n  }\n\n  checkEmailValidity = () => {\n    if (\n      this.state.email.match(\n        \"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\\"(?:\" +\n          '[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9]' +\n          \"(?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|\" +\n          \"[1-9]?[0-9]))\\\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\" +\n          \"\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])\"\n      )\n    ) {\n      this.setState({ emailValidityMessage: \"Your email looks valid!\" });\n      this.setState({ emailValidityBoolean: true });\n      this.setState({ passwordMatchMessage: \"\" });\n      this.setState({ passwordValidityMessage: \"\" });\n      this.setState({ errorMessage: \"\" });\n      return true;\n    } else {\n      this.setState({\n        emailValidityMessage: \"Oops! Your email looks like it is invalid!\",\n      });\n      this.setState({ emailValidityBoolean: false });\n      this.setState({ passwordMatchMessage: \"\" });\n      this.setState({ passwordValidityMessage: \"\" });\n      this.setState({ errorMessage: \"\" });\n      return false;\n    }\n  };\n\n  changeEmail = (newEmail) => {\n    this.checkEmailValidity();\n    this.setState({ email: newEmail });\n  };\n\n  checkPasswordValidity = () => {\n    if (\n      !!this.state.passwordOne.match(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%* #+=()^?&])[A-Za-z\\d$@$!%* #+=()^?&]{3,}$/\n      )\n    ) {\n      this.setState({ passwordValidityBoolean: true });\n      this.setState({ passwordValidityMessage: \"Your password looks secure!\" });\n      this.setState({ passwordMatchMessage: \"\" });\n      this.setState({ emailValidityMessage: \"\" });\n      this.setState({ errorMessage: \"\" });\n      return true;\n    } else {\n      this.setState({ passwordValidityBoolean: false });\n      this.setState({\n        passwordValidityMessage:\n          \"Oops! Password must contain at least one uppercase, one lowercase, one special character & one number!\",\n      });\n      this.setState({ passwordMatchMessage: \"\" });\n      this.setState({ emailValidityMessage: \"\" });\n      this.setState({ errorMessage: \"\" });\n      return false;\n    }\n  };\n\n  changePasswordOne = (newPassword) => {\n    this.checkPasswordValidity();\n    this.setState({ passwordOne: newPassword }, () => {\n      this.checkPasswordValidity();\n    });\n  };\n\n  checkPasswordMatch = () => {\n    if (this.state.passwordOne === this.state.passwordTwo) {\n      if (this.checkPasswordValidity()) {\n        this.setState({ passwordMatchBoolean: true });\n        this.setState({ passwordMatchMessage: \"Passwords match!\" });\n        this.setState({ passwordValidityMessage: \"\" });\n        this.setState({ emailValidityMessage: \"\" });\n        this.setState({ errorMessage: \"\" });\n        return true;\n      } else {\n        this.setState({ passwordValidityBoolean: false });\n        this.setState({\n          passwordValidityMessage:\n            \"Oops! Password must contain at least one uppercase, one lowercase, one special character & one number!\",\n        });\n        this.setState({ passwordMatchMessage: \"\" });\n        this.setState({ emailValidityMessage: \"\" });\n        this.setState({ errorMessage: \"\" });\n        return false;\n      }\n    } else {\n      this.setState({ passwordMatchBoolean: false });\n      this.setState({ passwordMatchMessage: \"Oops! Passwords don't match!\" });\n      this.setState({ passwordValidityMessage: \"\" });\n      this.setState({ emailValidityMessage: \"\" });\n      this.setState({ errorMessage: \"\" });\n      return false;\n    }\n  };\n\n  changePasswordTwo = (newPassword) => {\n    this.checkPasswordMatch();\n    this.setState({ passwordTwo: newPassword }, () => {\n      this.checkPasswordMatch();\n    });\n  };\n\n  writeToDatabase = () => {\n    firebase\n      .firestore()\n      .collection(\"existing-users\")\n      .doc(this.state.email)\n      .set({\n        created_at: Date.now(),\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"user-data\")\n          .doc(this.state.uid)\n          .set({\n            email: this.state.email,\n            initial_profile_setup_complete: false,\n          })\n          .then(() => {\n            if (this.state.errorMessage === \"\") {\n              window.location.href = \"/profile1\";\n            }\n          })\n          .catch((error) => {\n            this.setState({\n              errorMessage:\n                \"Oops! It looks like something went wrong. Please try again.\",\n            });\n          });\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage:\n            \"Oops! It looks like something went wrong. Please try again.\",\n        });\n      });\n  };\n\n  createUser = () => {\n    const email = this.state.email;\n    const password = this.state.passwordTwo;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        this.setState({ uid: user.uid }, () => {\n          this.writeToDatabase();\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage:\n            \"Oops! It looks like something went wrong. Please try again.\",\n        });\n      });\n  };\n\n  checkUserExists = () => {\n    firebase\n      .firestore()\n      .collection(\"existing-users\")\n      .doc(this.state.email)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          this.setState({ passwordMatchMessage: \"\" });\n          this.setState({ passwordValidityMessage: \"\" });\n          this.setState({ emailValidityMessage: \"\" });\n          this.setState({\n            errorMessage:\n              \"Oops! It looks like this email address is already in use.\",\n          });\n          this.setState({ errorMessageBoolean: true });\n        } else {\n          this.createUser();\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage:\n            \"Oops! It looks like something went wrong. Please try again.\",\n        });\n      });\n  };\n\n  signUpClick = () => {\n    if (\n      this.state.email === \"\" ||\n      this.state.passwordOne === \"\" ||\n      this.state.passwordTwo === \"\"\n    ) {\n      this.setState({ errorMessageBoolean: true });\n      this.setState({ passwordMatchMessage: \"\" });\n      this.setState({ passwordValidityMessage: \"\" });\n      this.setState({ emailValidityMessage: \"\" });\n      this.setState({\n        errorMessage: \"Oops! Please make sure all fields are filled.\",\n      });\n    } else if (\n      this.checkEmailValidity() &&\n      this.checkPasswordValidity() &&\n      this.checkPasswordMatch()\n    ) {\n      this.checkUserExists();\n    } else {\n      this.setState({ errorMessageBoolean: true });\n      this.setState({ passwordMatchMessage: \"\" });\n      this.setState({ passwordValidityMessage: \"\" });\n      this.setState({ emailValidityMessage: \"\" });\n      this.setState({\n        errorMessage:\n          \"Oops! Please make sure all fields are filled in correctly.\",\n      });\n    }\n  };\n\n  goBack = () => {\n    window.location.href = \"/landing\";\n  };\n\n  render() {\n    return (\n      <div className=\"main-div\">\n        <div className=\"back-button\">\n          <CustomButton value={\"Go Back\"} onClick={this.goBack} />\n        </div>\n        <div className=\"message\">Sign Up Below</div>\n        <TextBox\n          label={\"Email\"}\n          type={\"text\"}\n          value={this.state.email}\n          change={this.changeEmail}\n        />\n        <TextBox\n          label={\"Password\"}\n          type={\"password\"}\n          value={this.state.password}\n          change={this.changePasswordOne}\n        />\n        <TextBox\n          label={\"Confirm Password\"}\n          type={\"password\"}\n          value={this.state.password}\n          change={this.changePasswordTwo}\n        />\n        <div\n          style={\n            this.state.emailValidityBoolean\n              ? { color: \"green\" }\n              : { color: \"red\" }\n          }\n          className=\"error-messages\"\n        >\n          {this.state.emailValidityMessage}\n        </div>\n        <div\n          style={\n            this.state.passwordValidityBoolean\n              ? { color: \"green\" }\n              : { color: \"red\" }\n          }\n          className=\"error-messages\"\n        >\n          {this.state.passwordValidityMessage}\n        </div>\n        <div\n          style={\n            this.state.passwordMatchBoolean\n              ? { color: \"green\" }\n              : { color: \"red\" }\n          }\n          className=\"error-messages\"\n        >\n          {this.state.passwordMatchMessage}\n        </div>\n        <div\n          style={\n            this.state.errorMessageBoolean\n              ? { color: \"red\" }\n              : { color: \"green\" }\n          }\n          className=\"error-messages\"\n        >\n          {this.state.errorMessage}\n        </div>\n        <br />\n        <CustomButton value={\"Sign Up\"} onClick={this.signUpClick} />\n      </div>\n    );\n  }\n}\n\nexport default SignUpScreen;\n"]},"metadata":{},"sourceType":"module"}