{"ast":null,"code":"var _jsxFileName = \"/Users/rajivdulepet/Desktop/cs0320/term-project-asrira11-kpadh-mkurup1-rdulepet/frontend/src/screens/src/ViewProfileScreen.js\";\nimport React, { Component } from \"react\";\nimport \"../styles/ViewProfileScreen.css\";\nimport firebase from \"../../firebase\";\nimport BigCustomButton from \"../../components/src/BigCustomButton\";\nimport image from \"../../media/accessdenied.jpeg\";\nimport CustomButton from \"../../components/src/CustomButton\";\nimport TextBox from \"../../components/src/TextBox\";\nimport AddExperience from \"../../components/src/AddExperience\";\nimport ErrorMessage from \"../../components/src/ErrorMessage\";\nimport CollapsedExperience from \"../../components/src/CollapsedExperience\";\nimport MediumTextBox from \"../../components/src/MediumTextBox\";\nimport { WaveLoading } from \"react-loadingg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ViewProfileScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserID = () => {\n      let authFlag = true;\n      firebase.auth().onAuthStateChanged(user => {\n        if (authFlag) {\n          authFlag = false;\n\n          if (user) {\n            this.setState({\n              uid: user.uid\n            });\n            this.setState({\n              access: true\n            });\n            this.getUserData();\n            this.getExperiencesList();\n          } else {\n            this.setState({\n              access: false\n            });\n          }\n        }\n      });\n    };\n\n    this.getUserData = () => {\n      firebase.firestore().collection(\"user-data\").doc(this.state.uid).get().then(doc => {\n        if (doc.exists) {\n          this.setState({\n            firstName: doc.data().first_name\n          });\n          this.setState({\n            lastName: doc.data().last_name\n          });\n          this.setState({\n            major: doc.data().major\n          });\n          this.setState({\n            university: doc.data().university\n          });\n          this.setState({\n            coursework: doc.data().coursework\n          });\n          this.setState({\n            skills: doc.data().skills\n          });\n          this.setState({\n            cumulativeGPA: doc.data().cumulative_gpa\n          });\n          this.setState({\n            majorGPA: doc.data().major_gpa\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n        });\n      });\n    };\n\n    this.deleteExperience = concat => {\n      this.setState({\n        deleteVisible: true\n      });\n      this.setState({\n        currDeleteID: concat\n      });\n    };\n\n    this.deleteHelperNo = () => {\n      this.setState({\n        deleteVisible: false\n      });\n    };\n\n    this.deleteHelperYes = concat => {\n      let crypto = require(\"crypto-js\");\n\n      let IDToDelete = crypto.SHA256(concat).toString();\n      let localList = [...this.state.experiencesList];\n\n      for (const currID of localList) {\n        let currIndex = localList.indexOf(currID);\n\n        if (currID === IDToDelete) {\n          localList.splice(currIndex, 1);\n          this.setState({\n            experiencesList: localList\n          }, () => {\n            firebase.firestore().collection(\"user-data\").doc(this.state.uid).collection(\"experiences\").doc(\"Experiences List\").set({\n              experiencesList: this.state.experiencesList\n            }).then(() => {\n              firebase.firestore().collection(\"user-data\").doc(this.state.uid).collection(\"experiences\").doc(IDToDelete).delete().then(() => {\n                if (this.state.tempConcat !== \"\") {\n                  // editing an experience\n                  this.setState({\n                    experiences: []\n                  }, () => {\n                    let crypto = require(\"crypto-js\");\n\n                    let concat = this.state.company + this.state.title + this.state.startDate + \" - \" + this.state.endDate + this.state.description;\n                    let ID = crypto.SHA256(concat).toString();\n                    setTimeout(() => this.setState({\n                      modalVisible: false\n                    }), 1000);\n                    this.setState(prevState => ({\n                      experiencesList: [...prevState.experiencesList, ID]\n                    }), () => {\n                      this.writeToDatabase(ID);\n                      firebase.firestore().collection(\"user-data\").doc(this.state.uid).collection(\"experiences\").doc(\"Experiences List\").set({\n                        experiencesList: this.state.experiencesList\n                      }).then(() => {\n                        this.setState({\n                          modalVisible: false\n                        });\n                        this.setState({\n                          tempConcat: \"\"\n                        });\n                        this.getExperiencesList();\n                      }).catch(error => {\n                        this.setState({\n                          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n                        });\n                      });\n                    });\n                  });\n                } else {\n                  this.setState({\n                    experiences: []\n                  }, () => {\n                    this.getExperiencesList();\n                    this.setState({\n                      deleteVisible: false\n                    });\n                    this.setState({\n                      currDeleteID: \"\"\n                    });\n                  });\n                }\n              }).catch(error => {\n                this.setState({\n                  errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n                });\n              });\n            }).catch(error => {\n              this.setState({\n                errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n              });\n            });\n          });\n        }\n      }\n    };\n\n    this.editExperience = values => {\n      this.setState({\n        title: values[0]\n      });\n      this.setState({\n        company: values[1]\n      });\n      this.setState({\n        startDate: values[2].split(\" - \")[0]\n      });\n      this.setState({\n        endDate: values[2].split(\" - \")[1]\n      });\n      this.setState({\n        description: values[3]\n      });\n      this.setState({\n        modalVisible: true\n      });\n      this.setState({\n        tempConcat: values[0] + values[1] + values[2] + values[3]\n      });\n    };\n\n    this.getExperiencesList = () => {\n      firebase.firestore().collection(\"user-data\").doc(this.state.uid).collection(\"experiences\").doc(\"Experiences List\").get().then(doc => {\n        if (doc.exists) {\n          this.setState({\n            experiencesList: doc.data().experiencesList\n          }, () => {\n            for (let i = 0; i < this.state.experiencesList.length; i++) {\n              firebase.firestore().collection(\"user-data\").doc(this.state.uid).collection(\"experiences\").doc(this.state.experiencesList[i]).get().then(doc => {\n                if (doc.exists) {\n                  this.setState(prevState => ({\n                    experiences: [...prevState.experiences, /*#__PURE__*/_jsxDEV(CollapsedExperience, {\n                      company: doc.data().company,\n                      title: doc.data().title,\n                      dates: doc.data().start_date + \" - \" + doc.data().end_date,\n                      description: doc.data().description,\n                      delete: this.deleteExperience,\n                      edit: this.editExperience\n                    }, this.state.experiencesList[i], false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 25\n                    }, this)]\n                  }));\n                }\n              }).catch(error => {\n                this.setState({\n                  errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n                });\n              });\n            }\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n        });\n      });\n    };\n\n    this.changeFirstName = newName => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        firstName: newName\n      });\n    };\n\n    this.changeLastName = newName => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        lastName: newName\n      });\n    };\n\n    this.changeMajor = newMajor => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        major: newMajor\n      });\n    };\n\n    this.changeUniversity = newUniversity => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        university: newUniversity\n      });\n    };\n\n    this.changeTitle = newTitle => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        title: newTitle\n      });\n    };\n\n    this.changeCompany = newCompany => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        company: newCompany\n      });\n    };\n\n    this.changeStartDate = newStartDate => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        startDate: newStartDate\n      });\n    };\n\n    this.changeEndDate = newEndDate => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        endDate: newEndDate\n      });\n    };\n\n    this.changeDescription = newDescription => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        description: newDescription\n      });\n    };\n\n    this.changeErrorMessage = newErrorMessage => {\n      this.setState({\n        errorMessage: newErrorMessage\n      });\n    };\n\n    this.changeCumulativeGPA = newGPA => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        cumulativeGPA: newGPA\n      });\n    };\n\n    this.changeMajorGPA = newGPA => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        majorGPA: newGPA\n      });\n    };\n\n    this.changeCoursework = newCoursework => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        coursework: newCoursework\n      });\n    };\n\n    this.changeSkills = newSkills => {\n      this.setState({\n        changedBoolean: true\n      });\n      this.setState({\n        skills: newSkills\n      });\n    };\n\n    this.addExperienceButton = () => {\n      this.setState({\n        modalVisible: true\n      });\n    };\n\n    this.writeToDatabase = id => {\n      firebase.firestore().collection(\"user-data\").doc(this.state.uid).collection(\"experiences\").doc(id).set({\n        title: this.state.title,\n        company: this.state.company,\n        start_date: this.state.startDate,\n        end_date: this.state.endDate,\n        description: this.state.description\n      }).then(() => {\n        this.setState({\n          company: \"\"\n        });\n        this.setState({\n          title: \"\"\n        });\n        this.setState({\n          startDate: \"\"\n        });\n        this.setState({\n          endDate: \"\"\n        });\n        this.setState({\n          description: \"\"\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n        });\n      });\n    };\n\n    this.doneExperienceButton = () => {\n      this.setState({\n        changedBoolean: true\n      });\n\n      if (this.state.company !== \"\" && this.state.title !== \"\" && this.state.startDate !== \"\" && this.state.endDate !== \"\" && this.state.description !== \"\") {\n        if (this.state.tempConcat !== \"\") {\n          this.deleteHelperYes(this.state.tempConcat);\n        } else {\n          let crypto = require(\"crypto-js\");\n\n          let concat = this.state.company + this.state.title + this.state.startDate + \" - \" + this.state.endDate + this.state.description;\n          let ID = crypto.SHA256(concat).toString();\n          this.setState({\n            modalVisible: false\n          });\n          this.setState(prevState => ({\n            experiences: [...prevState.experiences, /*#__PURE__*/_jsxDEV(CollapsedExperience, {\n              company: this.state.company,\n              title: this.state.title,\n              dates: this.state.startDate + \" - \" + this.state.endDate,\n              description: this.state.description,\n              delete: this.deleteExperience,\n              edit: this.editExperience\n            }, ID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 13\n            }, this)]\n          }));\n          this.setState(prevState => ({\n            experiencesList: [...prevState.experiencesList, ID]\n          }));\n          this.writeToDatabase(ID);\n        }\n      } else {\n        this.setState({\n          errorMessage: \"Oops! Please make sure all fields are filled.\"\n        });\n      }\n    };\n\n    this.saveChangesButton = () => {\n      firebase.firestore().collection(\"user-data\").doc(this.state.uid).update({\n        first_name: this.state.firstName,\n        last_name: this.state.lastName,\n        major: this.state.major,\n        university: this.state.university,\n        cumulative_gpa: this.state.cumulativeGPA,\n        major_gpa: this.state.majorGPA,\n        coursework: this.state.coursework,\n        skills: this.state.skills,\n        initial_profile_setup_complete: true,\n        changed_resume: true\n      }).then(() => {\n        firebase.firestore().collection(\"user-data\").doc(this.state.uid).collection(\"experiences\").doc(\"Experiences List\").set({\n          experiencesList: this.state.experiencesList\n        }).then(() => {\n          if (this.state.errorMessage === \"\") {\n            window.location.href = \"/home\";\n          }\n        }).catch(error => {\n          this.setState({\n            errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n          });\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Oops! It looks like something went wrong. Please try again.\"\n        });\n      });\n    };\n\n    this.okErrorButton = () => {\n      window.location.href = \"/home\";\n      this.setState({\n        errorVisible: false\n      });\n      this.setState({\n        errorOkay: false\n      });\n      this.setState({\n        changedBoolean: false\n      });\n    };\n\n    this.cancelErrorButton = () => {\n      this.setState({\n        errorCancel: false\n      });\n      this.setState({\n        errorVisible: false\n      });\n    };\n\n    this.goBackButton = () => {\n      if (!this.state.changedBoolean) {\n        window.location.href = \"/home\";\n      } else {\n        this.setState({\n          errorVisible: true\n        });\n      }\n    };\n\n    this.triggerMainDivVisibility = () => {\n      if (this.state.modalVisible) {\n        if (this.state.changedBoolean) {\n          if (window.confirm(\"Oops! It looks like you have made changes that are unsaved. Are you sure you wish to leave?\")) {\n            this.setState({\n              modalVisible: false\n            });\n            this.setState({\n              title: \"\"\n            });\n            this.setState({\n              company: \"\"\n            });\n            this.setState({\n              startDate: \"\"\n            });\n            this.setState({\n              endDate: \"\"\n            });\n            this.setState({\n              description: \"\"\n            });\n          }\n        } else {\n          this.setState({\n            modalVisible: false\n          });\n          this.setState({\n            title: \"\"\n          });\n          this.setState({\n            company: \"\"\n          });\n          this.setState({\n            startDate: \"\"\n          });\n          this.setState({\n            endDate: \"\"\n          });\n          this.setState({\n            description: \"\"\n          });\n        }\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      major: \"\",\n      university: \"\",\n      cumulativeGPA: \"\",\n      majorGPA: \"\",\n      coursework: \"\",\n      skills: \"\",\n      experiences: [],\n      experiencesList: [],\n      modalVisible: false,\n      errorVisible: false,\n      deleteVisible: false,\n      errorOkay: false,\n      errorCancel: false,\n      title: \"\",\n      company: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      description: \"\",\n      errorMessage: \"\",\n      errorMessageBoolean: false,\n      uid: \"\",\n      access: true,\n      changedBoolean: false,\n      loading: true,\n      tempConcat: \"\",\n      currDeleteID: \"\"\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.zoom = \"80%\";\n    this.getUserID();\n    this.id = setTimeout(() => this.setState({\n      loading: false\n    }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.id);\n  }\n\n  render() {\n    const blurDiv = {\n      filter: \"blur(3px)\",\n      backgroundColor: \"#ebebeb\",\n      minWidth: \"127vw\",\n      overflowY: \"hidden\",\n      overflowX: \"hidden\"\n    };\n    const normalDiv = {\n      backgroundColor: \"white\"\n    };\n    const addExperienceModal = {\n      position: \"absolute\",\n      top: \"4%\",\n      left: \"30%\",\n      zIndex: \"10\"\n    };\n    const errorMessageModal = {\n      position: \"absolute\",\n      top: \"40%\",\n      left: \"25%\",\n      zIndex: \"10\"\n    };\n    return this.state.access ? this.state.loading ? /*#__PURE__*/_jsxDEV(WaveLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-div\",\n        style: this.state.modalVisible || this.state.errorVisible || this.state.deleteVisible ? blurDiv : normalDiv,\n        onClick: this.triggerMainDivVisibility,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapsed-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-header\",\n            children: \"Your Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"back-button-p\",\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              value: \"Go Back\",\n              onClick: this.goBackButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"save-changes\",\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              value: \"Save Changes\",\n              onClick: this.saveChangesButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(TextBox, {\n              label: \"First Name\",\n              value: this.state.firstName,\n              change: this.changeFirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n              label: \"Last Name\",\n              value: this.state.lastName,\n              change: this.changeLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(TextBox, {\n              label: \"Major\",\n              value: this.state.major,\n              change: this.changeMajor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n              label: \"University\",\n              value: this.state.university,\n              change: this.changeUniversity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(TextBox, {\n              label: \"Cumulative GPA\",\n              value: this.state.cumulativeGPA,\n              change: this.changeCumulativeGPA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n              label: \"Major GPA\",\n              value: this.state.majorGPA,\n              change: this.changeMajorGPA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MediumTextBox, {\n            label: \"Relevant Coursework\",\n            value: this.state.coursework,\n            change: this.changeCoursework\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MediumTextBox, {\n            label: \"Relevant Skills\",\n            value: this.state.skills,\n            change: this.changeSkills\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subheading-cp\",\n            children: \"Relevant Experiences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), this.state.experiences, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-wrapper-cp\",\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              value: \"Add Experience\",\n              onClick: this.addExperienceButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: addExperienceModal,\n        children: /*#__PURE__*/_jsxDEV(AddExperience, {\n          hidden: this.state.modalVisible,\n          done: this.doneExperienceButton,\n          title: this.state.title,\n          changeTitle: this.changeTitle,\n          company: this.state.company,\n          changeCompany: this.changeCompany,\n          startDate: this.state.startDate,\n          changeStartDate: this.changeStartDate,\n          endDate: this.state.endDate,\n          changeEndDate: this.changeEndDate,\n          description: this.state.description,\n          changeDescription: this.changeDescription,\n          errorMessage: this.state.errorMessage,\n          changeErrorMessage: this.changeErrorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: errorMessageModal,\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          hidden: this.state.errorVisible,\n          ok: this.okErrorButton,\n          cancel: this.cancelErrorButton,\n          message: \"Oops! It looks like you have made changes that are unsaved. Are you sure you wish to leave?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: errorMessageModal,\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          hidden: this.state.deleteVisible,\n          ok: () => this.deleteHelperYes(this.state.currDeleteID),\n          cancel: () => this.deleteHelperNo(),\n          message: \"Are you sure you wish to delete this experience?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"denied-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"access denied\",\n        style: {\n          height: \"330px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 16\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(BigCustomButton, {\n        value: \"Click Here To Log In\",\n        onClick: () => {\n          window.location.href = \"/landing\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ViewProfileScreen;","map":{"version":3,"sources":["/Users/rajivdulepet/Desktop/cs0320/term-project-asrira11-kpadh-mkurup1-rdulepet/frontend/src/screens/src/ViewProfileScreen.js"],"names":["React","Component","firebase","BigCustomButton","image","CustomButton","TextBox","AddExperience","ErrorMessage","CollapsedExperience","MediumTextBox","WaveLoading","ViewProfileScreen","constructor","props","getUserID","authFlag","auth","onAuthStateChanged","user","setState","uid","access","getUserData","getExperiencesList","firestore","collection","doc","state","get","then","exists","firstName","data","first_name","lastName","last_name","major","university","coursework","skills","cumulativeGPA","cumulative_gpa","majorGPA","major_gpa","catch","error","errorMessage","deleteExperience","concat","deleteVisible","currDeleteID","deleteHelperNo","deleteHelperYes","crypto","require","IDToDelete","SHA256","toString","localList","experiencesList","currID","currIndex","indexOf","splice","set","delete","tempConcat","experiences","company","title","startDate","endDate","description","ID","setTimeout","modalVisible","prevState","writeToDatabase","editExperience","values","split","i","length","start_date","end_date","changeFirstName","newName","changedBoolean","changeLastName","changeMajor","newMajor","changeUniversity","newUniversity","changeTitle","newTitle","changeCompany","newCompany","changeStartDate","newStartDate","changeEndDate","newEndDate","changeDescription","newDescription","changeErrorMessage","newErrorMessage","changeCumulativeGPA","newGPA","changeMajorGPA","changeCoursework","newCoursework","changeSkills","newSkills","addExperienceButton","id","doneExperienceButton","saveChangesButton","update","initial_profile_setup_complete","changed_resume","window","location","href","okErrorButton","errorVisible","errorOkay","cancelErrorButton","errorCancel","goBackButton","triggerMainDivVisibility","confirm","errorMessageBoolean","loading","componentDidMount","document","body","style","zoom","componentWillUnmount","clearTimeout","render","blurDiv","filter","backgroundColor","minWidth","overflowY","overflowX","normalDiv","addExperienceModal","position","top","left","zIndex","errorMessageModal","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/ViewProfileScreen.css\";\nimport firebase from \"../../firebase\";\nimport BigCustomButton from \"../../components/src/BigCustomButton\";\nimport image from \"../../media/accessdenied.jpeg\";\nimport CustomButton from \"../../components/src/CustomButton\";\nimport TextBox from \"../../components/src/TextBox\";\nimport AddExperience from \"../../components/src/AddExperience\";\nimport ErrorMessage from \"../../components/src/ErrorMessage\";\nimport CollapsedExperience from \"../../components/src/CollapsedExperience\";\nimport MediumTextBox from \"../../components/src/MediumTextBox\";\nimport { WaveLoading } from \"react-loadingg\";\n\nclass ViewProfileScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      major: \"\",\n      university: \"\",\n      cumulativeGPA: \"\",\n      majorGPA: \"\",\n      coursework: \"\",\n      skills: \"\",\n      experiences: [],\n      experiencesList: [],\n      modalVisible: false,\n      errorVisible: false,\n      deleteVisible: false,\n      errorOkay: false,\n      errorCancel: false,\n      title: \"\",\n      company: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      description: \"\",\n      errorMessage: \"\",\n      errorMessageBoolean: false,\n      uid: \"\",\n      access: true,\n      changedBoolean: false,\n      loading: true,\n      tempConcat: \"\",\n      currDeleteID: \"\",\n    };\n  }\n\n  getUserID = () => {\n    let authFlag = true;\n    firebase.auth().onAuthStateChanged((user) => {\n      if (authFlag) {\n        authFlag = false;\n        if (user) {\n          this.setState({ uid: user.uid });\n          this.setState({ access: true });\n          this.getUserData();\n          this.getExperiencesList();\n        } else {\n          this.setState({ access: false });\n        }\n      }\n    });\n  };\n\n  getUserData = () => {\n    firebase\n      .firestore()\n      .collection(\"user-data\")\n      .doc(this.state.uid)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          this.setState({ firstName: doc.data().first_name });\n          this.setState({ lastName: doc.data().last_name });\n          this.setState({ major: doc.data().major });\n          this.setState({ university: doc.data().university });\n          this.setState({ coursework: doc.data().coursework });\n          this.setState({ skills: doc.data().skills });\n          this.setState({ cumulativeGPA: doc.data().cumulative_gpa });\n          this.setState({ majorGPA: doc.data().major_gpa });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage:\n            \"Oops! It looks like something went wrong. Please try again.\",\n        });\n      });\n  };\n\n  deleteExperience = (concat) => {\n    this.setState({ deleteVisible: true });\n    this.setState({ currDeleteID: concat });\n  };\n\n  deleteHelperNo = () => {\n    this.setState({ deleteVisible: false });\n  };\n\n  deleteHelperYes = (concat) => {\n    let crypto = require(\"crypto-js\");\n    let IDToDelete = crypto.SHA256(concat).toString();\n    let localList = [...this.state.experiencesList];\n    for (const currID of localList) {\n      let currIndex = localList.indexOf(currID);\n      if (currID === IDToDelete) {\n        localList.splice(currIndex, 1);\n        this.setState({ experiencesList: localList }, () => {\n          firebase\n            .firestore()\n            .collection(\"user-data\")\n            .doc(this.state.uid)\n            .collection(\"experiences\")\n            .doc(\"Experiences List\")\n            .set({\n              experiencesList: this.state.experiencesList,\n            })\n            .then(() => {\n              firebase\n                .firestore()\n                .collection(\"user-data\")\n                .doc(this.state.uid)\n                .collection(\"experiences\")\n                .doc(IDToDelete)\n                .delete()\n                .then(() => {\n                  if (this.state.tempConcat !== \"\") {\n                    // editing an experience\n                    this.setState({ experiences: [] }, () => {\n                      let crypto = require(\"crypto-js\");\n                      let concat =\n                        this.state.company +\n                        this.state.title +\n                        this.state.startDate +\n                        \" - \" +\n                        this.state.endDate +\n                        this.state.description;\n                      let ID = crypto.SHA256(concat).toString();\n                      setTimeout(\n                        () => this.setState({ modalVisible: false }),\n                        1000\n                      );\n                      this.setState(\n                        (prevState) => ({\n                          experiencesList: [...prevState.experiencesList, ID],\n                        }),\n                        () => {\n                          this.writeToDatabase(ID);\n                          firebase\n                            .firestore()\n                            .collection(\"user-data\")\n                            .doc(this.state.uid)\n                            .collection(\"experiences\")\n                            .doc(\"Experiences List\")\n                            .set({\n                              experiencesList: this.state.experiencesList,\n                            })\n                            .then(() => {\n                              this.setState({ modalVisible: false });\n                              this.setState({ tempConcat: \"\" });\n                              this.getExperiencesList();\n                            })\n                            .catch((error) => {\n                              this.setState({\n                                errorMessage:\n                                  \"Oops! It looks like something went wrong. Please try again.\",\n                              });\n                            });\n                        }\n                      );\n                    });\n                  } else {\n                    this.setState({ experiences: [] }, () => {\n                      this.getExperiencesList();\n                      this.setState({ deleteVisible: false });\n                      this.setState({ currDeleteID: \"\" });\n                    });\n                  }\n                })\n                .catch((error) => {\n                  this.setState({\n                    errorMessage:\n                      \"Oops! It looks like something went wrong. Please try again.\",\n                  });\n                });\n            })\n            .catch((error) => {\n              this.setState({\n                errorMessage:\n                  \"Oops! It looks like something went wrong. Please try again.\",\n              });\n            });\n        });\n      }\n    }\n  };\n\n  editExperience = (values) => {\n    this.setState({ title: values[0] });\n    this.setState({ company: values[1] });\n    this.setState({ startDate: values[2].split(\" - \")[0] });\n    this.setState({ endDate: values[2].split(\" - \")[1] });\n    this.setState({ description: values[3] });\n    this.setState({ modalVisible: true });\n    this.setState({\n      tempConcat: values[0] + values[1] + values[2] + values[3],\n    });\n  };\n\n  getExperiencesList = () => {\n    firebase\n      .firestore()\n      .collection(\"user-data\")\n      .doc(this.state.uid)\n      .collection(\"experiences\")\n      .doc(\"Experiences List\")\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          this.setState({ experiencesList: doc.data().experiencesList }, () => {\n            for (let i = 0; i < this.state.experiencesList.length; i++) {\n              firebase\n                .firestore()\n                .collection(\"user-data\")\n                .doc(this.state.uid)\n                .collection(\"experiences\")\n                .doc(this.state.experiencesList[i])\n                .get()\n                .then((doc) => {\n                  if (doc.exists) {\n                    this.setState((prevState) => ({\n                      experiences: [\n                        ...prevState.experiences,\n                        <CollapsedExperience\n                          company={doc.data().company}\n                          title={doc.data().title}\n                          dates={\n                            doc.data().start_date + \" - \" + doc.data().end_date\n                          }\n                          description={doc.data().description}\n                          key={this.state.experiencesList[i]}\n                          delete={this.deleteExperience}\n                          edit={this.editExperience}\n                        />,\n                      ],\n                    }));\n                  }\n                })\n                .catch((error) => {\n                  this.setState({\n                    errorMessage:\n                      \"Oops! It looks like something went wrong. Please try again.\",\n                  });\n                });\n            }\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage:\n            \"Oops! It looks like something went wrong. Please try again.\",\n        });\n      });\n  };\n\n  componentDidMount() {\n    document.body.style.zoom = \"80%\";\n    this.getUserID();\n    this.id = setTimeout(() => this.setState({ loading: false }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.id);\n  }\n\n  changeFirstName = (newName) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ firstName: newName });\n  };\n\n  changeLastName = (newName) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ lastName: newName });\n  };\n\n  changeMajor = (newMajor) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ major: newMajor });\n  };\n\n  changeUniversity = (newUniversity) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ university: newUniversity });\n  };\n\n  changeTitle = (newTitle) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ title: newTitle });\n  };\n\n  changeCompany = (newCompany) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ company: newCompany });\n  };\n\n  changeStartDate = (newStartDate) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ startDate: newStartDate });\n  };\n\n  changeEndDate = (newEndDate) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ endDate: newEndDate });\n  };\n\n  changeDescription = (newDescription) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ description: newDescription });\n  };\n\n  changeErrorMessage = (newErrorMessage) => {\n    this.setState({ errorMessage: newErrorMessage });\n  };\n\n  changeCumulativeGPA = (newGPA) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ cumulativeGPA: newGPA });\n  };\n\n  changeMajorGPA = (newGPA) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ majorGPA: newGPA });\n  };\n\n  changeCoursework = (newCoursework) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ coursework: newCoursework });\n  };\n\n  changeSkills = (newSkills) => {\n    this.setState({ changedBoolean: true });\n    this.setState({ skills: newSkills });\n  };\n\n  addExperienceButton = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  writeToDatabase = (id) => {\n    firebase\n      .firestore()\n      .collection(\"user-data\")\n      .doc(this.state.uid)\n      .collection(\"experiences\")\n      .doc(id)\n      .set({\n        title: this.state.title,\n        company: this.state.company,\n        start_date: this.state.startDate,\n        end_date: this.state.endDate,\n        description: this.state.description,\n      })\n      .then(() => {\n        this.setState({ company: \"\" });\n        this.setState({ title: \"\" });\n        this.setState({ startDate: \"\" });\n        this.setState({ endDate: \"\" });\n        this.setState({ description: \"\" });\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage:\n            \"Oops! It looks like something went wrong. Please try again.\",\n        });\n      });\n  };\n\n  doneExperienceButton = () => {\n    this.setState({ changedBoolean: true });\n    if (\n      this.state.company !== \"\" &&\n      this.state.title !== \"\" &&\n      this.state.startDate !== \"\" &&\n      this.state.endDate !== \"\" &&\n      this.state.description !== \"\"\n    ) {\n      if (this.state.tempConcat !== \"\") {\n        this.deleteHelperYes(this.state.tempConcat);\n      } else {\n        let crypto = require(\"crypto-js\");\n        let concat =\n          this.state.company +\n          this.state.title +\n          this.state.startDate +\n          \" - \" +\n          this.state.endDate +\n          this.state.description;\n        let ID = crypto.SHA256(concat).toString();\n        this.setState({ modalVisible: false });\n        this.setState((prevState) => ({\n          experiences: [\n            ...prevState.experiences,\n            <CollapsedExperience\n              company={this.state.company}\n              title={this.state.title}\n              dates={this.state.startDate + \" - \" + this.state.endDate}\n              description={this.state.description}\n              key={ID}\n              delete={this.deleteExperience}\n              edit={this.editExperience}\n            />,\n          ],\n        }));\n        this.setState((prevState) => ({\n          experiencesList: [...prevState.experiencesList, ID],\n        }));\n        this.writeToDatabase(ID);\n      }\n    } else {\n      this.setState({\n        errorMessage: \"Oops! Please make sure all fields are filled.\",\n      });\n    }\n  };\n\n  saveChangesButton = () => {\n    firebase\n      .firestore()\n      .collection(\"user-data\")\n      .doc(this.state.uid)\n      .update({\n        first_name: this.state.firstName,\n        last_name: this.state.lastName,\n        major: this.state.major,\n        university: this.state.university,\n        cumulative_gpa: this.state.cumulativeGPA,\n        major_gpa: this.state.majorGPA,\n        coursework: this.state.coursework,\n        skills: this.state.skills,\n        initial_profile_setup_complete: true,\n        changed_resume: true,\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"user-data\")\n          .doc(this.state.uid)\n          .collection(\"experiences\")\n          .doc(\"Experiences List\")\n          .set({\n            experiencesList: this.state.experiencesList,\n          })\n          .then(() => {\n            if (this.state.errorMessage === \"\") {\n              window.location.href = \"/home\";\n            }\n          })\n          .catch((error) => {\n            this.setState({\n              errorMessage:\n                \"Oops! It looks like something went wrong. Please try again.\",\n            });\n          });\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage:\n            \"Oops! It looks like something went wrong. Please try again.\",\n        });\n      });\n  };\n\n  okErrorButton = () => {\n    window.location.href = \"/home\";\n    this.setState({ errorVisible: false });\n    this.setState({ errorOkay: false });\n    this.setState({ changedBoolean: false });\n  };\n\n  cancelErrorButton = () => {\n    this.setState({ errorCancel: false });\n    this.setState({ errorVisible: false });\n  };\n\n  goBackButton = () => {\n    if (!this.state.changedBoolean) {\n      window.location.href = \"/home\";\n    } else {\n      this.setState({ errorVisible: true });\n    }\n  };\n\n  triggerMainDivVisibility = () => {\n    if (this.state.modalVisible) {\n      if (this.state.changedBoolean) {\n        if (\n          window.confirm(\n            \"Oops! It looks like you have made changes that are unsaved. Are you sure you wish to leave?\"\n          )\n        ) {\n          this.setState({ modalVisible: false });\n          this.setState({ title: \"\" });\n          this.setState({ company: \"\" });\n          this.setState({ startDate: \"\" });\n          this.setState({ endDate: \"\" });\n          this.setState({ description: \"\" });\n        }\n      } else {\n        this.setState({ modalVisible: false });\n        this.setState({ title: \"\" });\n        this.setState({ company: \"\" });\n        this.setState({ startDate: \"\" });\n        this.setState({ endDate: \"\" });\n        this.setState({ description: \"\" });\n      }\n    }\n  };\n\n  render() {\n    const blurDiv = {\n      filter: \"blur(3px)\",\n      backgroundColor: \"#ebebeb\",\n      minWidth: \"127vw\",\n      overflowY: \"hidden\",\n      overflowX: \"hidden\",\n    };\n    const normalDiv = {\n      backgroundColor: \"white\",\n    };\n    const addExperienceModal = {\n      position: \"absolute\",\n      top: \"4%\",\n      left: \"30%\",\n      zIndex: \"10\",\n    };\n    const errorMessageModal = {\n      position: \"absolute\",\n      top: \"40%\",\n      left: \"25%\",\n      zIndex: \"10\",\n    };\n\n    return this.state.access ? (\n      this.state.loading ? (\n        <WaveLoading />\n      ) : (\n        <div>\n          <div\n            className=\"main-div\"\n            style={\n              this.state.modalVisible ||\n              this.state.errorVisible ||\n              this.state.deleteVisible\n                ? blurDiv\n                : normalDiv\n            }\n            onClick={this.triggerMainDivVisibility}\n          >\n            <div className=\"collapsed-wrapper\">\n              <div className=\"custom-header\">Your Profile</div>\n              <div className=\"back-button-p\">\n                <CustomButton value={\"Go Back\"} onClick={this.goBackButton} />\n              </div>\n              <div className=\"save-changes\">\n                <CustomButton\n                  value={\"Save Changes\"}\n                  onClick={this.saveChangesButton}\n                />\n              </div>\n              <div className=\"box-wrapper\">\n                <TextBox\n                  label={\"First Name\"}\n                  value={this.state.firstName}\n                  change={this.changeFirstName}\n                />\n\n                <TextBox\n                  label={\"Last Name\"}\n                  value={this.state.lastName}\n                  change={this.changeLastName}\n                />\n              </div>\n              <div className=\"box-wrapper\">\n                <TextBox\n                  label={\"Major\"}\n                  value={this.state.major}\n                  change={this.changeMajor}\n                />\n                <TextBox\n                  label={\"University\"}\n                  value={this.state.university}\n                  change={this.changeUniversity}\n                />\n              </div>\n              <div className=\"box-wrapper\">\n                <TextBox\n                  label={\"Cumulative GPA\"}\n                  value={this.state.cumulativeGPA}\n                  change={this.changeCumulativeGPA}\n                />\n                <TextBox\n                  label={\"Major GPA\"}\n                  value={this.state.majorGPA}\n                  change={this.changeMajorGPA}\n                />\n              </div>\n              <MediumTextBox\n                label={\"Relevant Coursework\"}\n                value={this.state.coursework}\n                change={this.changeCoursework}\n              />\n              <MediumTextBox\n                label={\"Relevant Skills\"}\n                value={this.state.skills}\n                change={this.changeSkills}\n              />\n              <div className=\"subheading-cp\">Relevant Experiences</div>\n              {this.state.experiences}\n              <div className=\"button-wrapper-cp\">\n                <CustomButton\n                  value={\"Add Experience\"}\n                  onClick={this.addExperienceButton}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={addExperienceModal}>\n            <AddExperience\n              hidden={this.state.modalVisible}\n              done={this.doneExperienceButton}\n              title={this.state.title}\n              changeTitle={this.changeTitle}\n              company={this.state.company}\n              changeCompany={this.changeCompany}\n              startDate={this.state.startDate}\n              changeStartDate={this.changeStartDate}\n              endDate={this.state.endDate}\n              changeEndDate={this.changeEndDate}\n              description={this.state.description}\n              changeDescription={this.changeDescription}\n              errorMessage={this.state.errorMessage}\n              changeErrorMessage={this.changeErrorMessage}\n            />\n          </div>\n          <div style={errorMessageModal}>\n            <ErrorMessage\n              hidden={this.state.errorVisible}\n              ok={this.okErrorButton}\n              cancel={this.cancelErrorButton}\n              message={\n                \"Oops! It looks like you have made changes that are unsaved. Are you sure you wish to leave?\"\n              }\n            />\n          </div>\n          <div style={errorMessageModal}>\n            <ErrorMessage\n              hidden={this.state.deleteVisible}\n              ok={() => this.deleteHelperYes(this.state.currDeleteID)}\n              cancel={() => this.deleteHelperNo()}\n              message={\"Are you sure you wish to delete this experience?\"}\n            />\n          </div>\n        </div>\n      )\n    ) : (\n      <div className={\"denied-wrapper\"}>\n        <img src={image} alt={\"access denied\"} style={{ height: \"330px\" }} />\n        <br /> <br /> <br /> <br />\n        <BigCustomButton\n          value={\"Click Here To Log In\"}\n          onClick={() => {\n            window.location.href = \"/landing\";\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ViewProfileScreen;\n"]},"metadata":{},"sourceType":"module"}